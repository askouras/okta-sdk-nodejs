"use strict";
/**
 * Okta API
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.7.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthorizationServer = void 0;
var AuthorizationServer = /** @class */ (function () {
    function AuthorizationServer() {
    }
    AuthorizationServer.getAttributeTypeMap = function () {
        return AuthorizationServer.attributeTypeMap;
    };
    AuthorizationServer.discriminator = undefined;
    AuthorizationServer.attributeTypeMap = [
        {
            "name": "links",
            "baseName": "_links",
            "type": "{ [key: string]: object; }"
        },
        {
            "name": "audiences",
            "baseName": "audiences",
            "type": "Array<string>"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "Date"
        },
        {
            "name": "credentials",
            "baseName": "credentials",
            "type": "AuthorizationServerCredentials"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "issuer",
            "baseName": "issuer",
            "type": "string"
        },
        {
            "name": "issuerMode",
            "baseName": "issuerMode",
            "type": "AuthorizationServer.IssuerModeEnum"
        },
        {
            "name": "lastUpdated",
            "baseName": "lastUpdated",
            "type": "Date"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "AuthorizationServer.StatusEnum"
        }
    ];
    return AuthorizationServer;
}());
exports.AuthorizationServer = AuthorizationServer;
(function (AuthorizationServer) {
    var IssuerModeEnum;
    (function (IssuerModeEnum) {
        IssuerModeEnum[IssuerModeEnum["OrgUrl"] = 'ORG_URL'] = "OrgUrl";
        IssuerModeEnum[IssuerModeEnum["CustomUrl"] = 'CUSTOM_URL'] = "CustomUrl";
    })(IssuerModeEnum = AuthorizationServer.IssuerModeEnum || (AuthorizationServer.IssuerModeEnum = {}));
    var StatusEnum;
    (function (StatusEnum) {
        StatusEnum[StatusEnum["Active"] = 'ACTIVE'] = "Active";
        StatusEnum[StatusEnum["Inactive"] = 'INACTIVE'] = "Inactive";
    })(StatusEnum = AuthorizationServer.StatusEnum || (AuthorizationServer.StatusEnum = {}));
})(AuthorizationServer = exports.AuthorizationServer || (exports.AuthorizationServer = {}));
exports.AuthorizationServer = AuthorizationServer;
