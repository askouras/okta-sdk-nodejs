/**
 * Okta API
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.7.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '.';
import { UserSchemaAttributeEnum } from './userSchemaAttributeEnum';
import { UserSchemaAttributeItems } from './userSchemaAttributeItems';
import { UserSchemaAttributeMaster } from './userSchemaAttributeMaster';
import { UserSchemaAttributePermission } from './userSchemaAttributePermission';
import { UserSchemaAttributeScope } from './userSchemaAttributeScope';
import { UserSchemaAttributeType } from './userSchemaAttributeType';
import { UserSchemaAttributeUnion } from './userSchemaAttributeUnion';

export class GroupSchemaAttribute {
    'description'?: string;
    '_enum'?: Array<string>;
    'externalName'?: string;
    'externalNamespace'?: string;
    'items'?: UserSchemaAttributeItems;
    'master'?: UserSchemaAttributeMaster;
    'maxLength'?: number;
    'minLength'?: number;
    'mutability'?: string;
    'oneOf'?: Array<UserSchemaAttributeEnum>;
    'permissions'?: Array<UserSchemaAttributePermission>;
    'required'?: boolean;
    'scope'?: UserSchemaAttributeScope;
    'title'?: string;
    'type'?: UserSchemaAttributeType;
    'union'?: UserSchemaAttributeUnion;
    'unique'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "_enum",
            "baseName": "enum",
            "type": "Array<string>"
        },
        {
            "name": "externalName",
            "baseName": "externalName",
            "type": "string"
        },
        {
            "name": "externalNamespace",
            "baseName": "externalNamespace",
            "type": "string"
        },
        {
            "name": "items",
            "baseName": "items",
            "type": "UserSchemaAttributeItems"
        },
        {
            "name": "master",
            "baseName": "master",
            "type": "UserSchemaAttributeMaster"
        },
        {
            "name": "maxLength",
            "baseName": "maxLength",
            "type": "number"
        },
        {
            "name": "minLength",
            "baseName": "minLength",
            "type": "number"
        },
        {
            "name": "mutability",
            "baseName": "mutability",
            "type": "string"
        },
        {
            "name": "oneOf",
            "baseName": "oneOf",
            "type": "Array<UserSchemaAttributeEnum>"
        },
        {
            "name": "permissions",
            "baseName": "permissions",
            "type": "Array<UserSchemaAttributePermission>"
        },
        {
            "name": "required",
            "baseName": "required",
            "type": "boolean"
        },
        {
            "name": "scope",
            "baseName": "scope",
            "type": "UserSchemaAttributeScope"
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "UserSchemaAttributeType"
        },
        {
            "name": "union",
            "baseName": "union",
            "type": "UserSchemaAttributeUnion"
        },
        {
            "name": "unique",
            "baseName": "unique",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return GroupSchemaAttribute.attributeTypeMap;
    }
}

