/**
 * Okta API
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.7.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { OktaSignOnPolicyRuleSignonSessionActions } from './oktaSignOnPolicyRuleSignonSessionActions';

export class OktaSignOnPolicyRuleSignonActions {
    'access'?: OktaSignOnPolicyRuleSignonActions.AccessEnum;
    'factorLifetime'?: number;
    'factorPromptMode'?: OktaSignOnPolicyRuleSignonActions.FactorPromptModeEnum;
    'rememberDeviceByDefault'?: boolean;
    'requireFactor'?: boolean;
    'session'?: OktaSignOnPolicyRuleSignonSessionActions;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "access",
            "baseName": "access",
            "type": "OktaSignOnPolicyRuleSignonActions.AccessEnum"
        },
        {
            "name": "factorLifetime",
            "baseName": "factorLifetime",
            "type": "number"
        },
        {
            "name": "factorPromptMode",
            "baseName": "factorPromptMode",
            "type": "OktaSignOnPolicyRuleSignonActions.FactorPromptModeEnum"
        },
        {
            "name": "rememberDeviceByDefault",
            "baseName": "rememberDeviceByDefault",
            "type": "boolean"
        },
        {
            "name": "requireFactor",
            "baseName": "requireFactor",
            "type": "boolean"
        },
        {
            "name": "session",
            "baseName": "session",
            "type": "OktaSignOnPolicyRuleSignonSessionActions"
        }    ];

    static getAttributeTypeMap() {
        return OktaSignOnPolicyRuleSignonActions.attributeTypeMap;
    }
}

export namespace OktaSignOnPolicyRuleSignonActions {
    export enum AccessEnum {
        Allow = <any> 'ALLOW',
        Deny = <any> 'DENY'
    }
    export enum FactorPromptModeEnum {
        Always = <any> 'ALWAYS',
        Device = <any> 'DEVICE',
        Session = <any> 'SESSION'
    }
}
