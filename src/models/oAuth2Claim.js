"use strict";
/**
 * Okta API
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.7.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OAuth2Claim = void 0;
var OAuth2Claim = /** @class */ (function () {
    function OAuth2Claim() {
    }
    OAuth2Claim.getAttributeTypeMap = function () {
        return OAuth2Claim.attributeTypeMap;
    };
    OAuth2Claim.discriminator = undefined;
    OAuth2Claim.attributeTypeMap = [
        {
            "name": "links",
            "baseName": "_links",
            "type": "{ [key: string]: object; }"
        },
        {
            "name": "alwaysIncludeInToken",
            "baseName": "alwaysIncludeInToken",
            "type": "boolean"
        },
        {
            "name": "claimType",
            "baseName": "claimType",
            "type": "OAuth2Claim.ClaimTypeEnum"
        },
        {
            "name": "conditions",
            "baseName": "conditions",
            "type": "OAuth2ClaimConditions"
        },
        {
            "name": "groupFilterType",
            "baseName": "group_filter_type",
            "type": "OAuth2Claim.GroupFilterTypeEnum"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "OAuth2Claim.StatusEnum"
        },
        {
            "name": "system",
            "baseName": "system",
            "type": "boolean"
        },
        {
            "name": "value",
            "baseName": "value",
            "type": "string"
        },
        {
            "name": "valueType",
            "baseName": "valueType",
            "type": "OAuth2Claim.ValueTypeEnum"
        }
    ];
    return OAuth2Claim;
}());
exports.OAuth2Claim = OAuth2Claim;
(function (OAuth2Claim) {
    var ClaimTypeEnum;
    (function (ClaimTypeEnum) {
        ClaimTypeEnum[ClaimTypeEnum["Identity"] = 'IDENTITY'] = "Identity";
        ClaimTypeEnum[ClaimTypeEnum["Resource"] = 'RESOURCE'] = "Resource";
    })(ClaimTypeEnum = OAuth2Claim.ClaimTypeEnum || (OAuth2Claim.ClaimTypeEnum = {}));
    var GroupFilterTypeEnum;
    (function (GroupFilterTypeEnum) {
        GroupFilterTypeEnum[GroupFilterTypeEnum["StartsWith"] = 'STARTS_WITH'] = "StartsWith";
        GroupFilterTypeEnum[GroupFilterTypeEnum["Equals"] = 'EQUALS'] = "Equals";
        GroupFilterTypeEnum[GroupFilterTypeEnum["Contains"] = 'CONTAINS'] = "Contains";
        GroupFilterTypeEnum[GroupFilterTypeEnum["Regex"] = 'REGEX'] = "Regex";
    })(GroupFilterTypeEnum = OAuth2Claim.GroupFilterTypeEnum || (OAuth2Claim.GroupFilterTypeEnum = {}));
    var StatusEnum;
    (function (StatusEnum) {
        StatusEnum[StatusEnum["Active"] = 'ACTIVE'] = "Active";
        StatusEnum[StatusEnum["Inactive"] = 'INACTIVE'] = "Inactive";
    })(StatusEnum = OAuth2Claim.StatusEnum || (OAuth2Claim.StatusEnum = {}));
    var ValueTypeEnum;
    (function (ValueTypeEnum) {
        ValueTypeEnum[ValueTypeEnum["Expression"] = 'EXPRESSION'] = "Expression";
        ValueTypeEnum[ValueTypeEnum["Groups"] = 'GROUPS'] = "Groups";
        ValueTypeEnum[ValueTypeEnum["System"] = 'SYSTEM'] = "System";
    })(ValueTypeEnum = OAuth2Claim.ValueTypeEnum || (OAuth2Claim.ValueTypeEnum = {}));
})(OAuth2Claim = exports.OAuth2Claim || (exports.OAuth2Claim = {}));
exports.OAuth2Claim = OAuth2Claim;
