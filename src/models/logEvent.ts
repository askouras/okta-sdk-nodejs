/**
 * Okta API
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.7.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '.';
import { LogActor } from './logActor';
import { LogAuthenticationContext } from './logAuthenticationContext';
import { LogClient } from './logClient';
import { LogDebugContext } from './logDebugContext';
import { LogOutcome } from './logOutcome';
import { LogRequest } from './logRequest';
import { LogSecurityContext } from './logSecurityContext';
import { LogSeverity } from './logSeverity';
import { LogTarget } from './logTarget';
import { LogTransaction } from './logTransaction';

export class LogEvent {
    'actor'?: LogActor;
    'authenticationContext'?: LogAuthenticationContext;
    'client'?: LogClient;
    'debugContext'?: LogDebugContext;
    'displayMessage'?: string;
    'eventType'?: string;
    'legacyEventType'?: string;
    'outcome'?: LogOutcome;
    'published'?: Date;
    'request'?: LogRequest;
    'securityContext'?: LogSecurityContext;
    'severity'?: LogSeverity;
    'target'?: Array<LogTarget>;
    'transaction'?: LogTransaction;
    'uuid'?: string;
    'version'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "actor",
            "baseName": "actor",
            "type": "LogActor"
        },
        {
            "name": "authenticationContext",
            "baseName": "authenticationContext",
            "type": "LogAuthenticationContext"
        },
        {
            "name": "client",
            "baseName": "client",
            "type": "LogClient"
        },
        {
            "name": "debugContext",
            "baseName": "debugContext",
            "type": "LogDebugContext"
        },
        {
            "name": "displayMessage",
            "baseName": "displayMessage",
            "type": "string"
        },
        {
            "name": "eventType",
            "baseName": "eventType",
            "type": "string"
        },
        {
            "name": "legacyEventType",
            "baseName": "legacyEventType",
            "type": "string"
        },
        {
            "name": "outcome",
            "baseName": "outcome",
            "type": "LogOutcome"
        },
        {
            "name": "published",
            "baseName": "published",
            "type": "Date"
        },
        {
            "name": "request",
            "baseName": "request",
            "type": "LogRequest"
        },
        {
            "name": "securityContext",
            "baseName": "securityContext",
            "type": "LogSecurityContext"
        },
        {
            "name": "severity",
            "baseName": "severity",
            "type": "LogSeverity"
        },
        {
            "name": "target",
            "baseName": "target",
            "type": "Array<LogTarget>"
        },
        {
            "name": "transaction",
            "baseName": "transaction",
            "type": "LogTransaction"
        },
        {
            "name": "uuid",
            "baseName": "uuid",
            "type": "string"
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return LogEvent.attributeTypeMap;
    }
}

