"use strict";
/**
 * Okta API
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.7.0
 * Contact: devex-public@okta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LogEvent = void 0;
var LogEvent = /** @class */ (function () {
    function LogEvent() {
    }
    LogEvent.getAttributeTypeMap = function () {
        return LogEvent.attributeTypeMap;
    };
    LogEvent.discriminator = undefined;
    LogEvent.attributeTypeMap = [
        {
            "name": "actor",
            "baseName": "actor",
            "type": "LogActor"
        },
        {
            "name": "authenticationContext",
            "baseName": "authenticationContext",
            "type": "LogAuthenticationContext"
        },
        {
            "name": "client",
            "baseName": "client",
            "type": "LogClient"
        },
        {
            "name": "debugContext",
            "baseName": "debugContext",
            "type": "LogDebugContext"
        },
        {
            "name": "displayMessage",
            "baseName": "displayMessage",
            "type": "string"
        },
        {
            "name": "eventType",
            "baseName": "eventType",
            "type": "string"
        },
        {
            "name": "legacyEventType",
            "baseName": "legacyEventType",
            "type": "string"
        },
        {
            "name": "outcome",
            "baseName": "outcome",
            "type": "LogOutcome"
        },
        {
            "name": "published",
            "baseName": "published",
            "type": "Date"
        },
        {
            "name": "request",
            "baseName": "request",
            "type": "LogRequest"
        },
        {
            "name": "securityContext",
            "baseName": "securityContext",
            "type": "LogSecurityContext"
        },
        {
            "name": "severity",
            "baseName": "severity",
            "type": "LogSeverity"
        },
        {
            "name": "target",
            "baseName": "target",
            "type": "Array<LogTarget>"
        },
        {
            "name": "transaction",
            "baseName": "transaction",
            "type": "LogTransaction"
        },
        {
            "name": "uuid",
            "baseName": "uuid",
            "type": "string"
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "string"
        }
    ];
    return LogEvent;
}());
exports.LogEvent = LogEvent;
