{{!-- The template file is not auto-generated - this banner is to be included into destination files --}}
/* THIS FILE IS AUTO-GENERATED - SEE CONTRIBUTOR DOCUMENTATION */

{{#if extends~}}
import { {{extends}} } from './{{extends}}';
{{else}}
import { Resource } from '../resource';
{{/if}}
{{#if this.isExtensible}}
import { CustomAttributeValue } from '../custom-attributes';
{{/if}}
import { Client } from '../client';
{{#if (shouldGenerateOptionsType modelName)}}
{{#if properties.length}}
import { OptionalKnownProperties } from '../optional-known-properties-type';
{{/if}}
{{/if}}
{{{typeScriptModelImportBuilder this}}}

{{#if extends}}
declare class {{modelName}} extends {{extends}} {
{{else}}
declare class {{modelName}} extends Resource {
{{/if}}
{{#if this.enum}}
  constructor(resourceJson: string, client: Client);
{{else}}
  constructor(resourceJson: Record<string, unknown>, client: Client);
{{/if}}

{{#each properties}}
{{#unless (isRestrictedPropertyOverride ../modelName this.propertyName)}}
{{#if this.$ref}}
{{#if (ne this.model "object") }}
  {{#if this.readOnly}}readonly {{/if}}{{{sanitizeModelPropertyName ../modelName this.propertyName}}}: {{model}};
{{/if}}
{{else}}
  {{#if this.readOnly}}readonly {{/if}}{{{sanitizeModelPropertyName ../modelName this.propertyName}}}: {{{convertSwaggerToTSType this.commonType this.model}}};
{{/if}}
{{/unless}}
{{/each}}
{{#if this.isExtensible}}
  [key: string]: CustomAttributeValue | CustomAttributeValue[]
{{/if}}

  {{#each crud}}
  {{#if (eq alias 'update')}}
  {{{typeScriptModelMethodSignatureBuilder this ../modelName}}}
  {{/if}}
  {{#if (eq alias 'delete')}}
  {{{typeScriptModelMethodSignatureBuilder this ../modelName}}}
  {{/if}}
  {{/each}}
  {{#each methods}}
  {{{typeScriptModelMethodSignatureBuilder this ../modelName}}}
  {{/each}}
}

{{#if (shouldGenerateOptionsType modelName)}}
{{#if properties.length}}
type {{modelName}}Options = OptionalKnownProperties<{{modelName}}>;
{{else}}
type {{modelName}}Options = Record<string, unknown>;
{{/if}}

export {
  {{modelName}},
  {{modelName}}Options
};
{{else}}
export {
  {{modelName}}
};
{{/if}}
